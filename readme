# 本番環境（MariaDB）で事前に実行しておくべきSQL
# (SQL that should be executed in advance in the production environment (MariaDB))
DROP TABLE IF EXISTS t_task_question;
DROP TABLE IF EXISTS t_task_course;
DROP TABLE IF EXISTS t_user_task_code;
DROP TABLE IF EXISTS t_message;
DROP TABLE IF EXISTS t_class_course;
DROP TABLE IF EXISTS t_user_course;
DROP TABLE IF EXISTS t_course;
DROP TABLE IF EXISTS t_user_class;
DROP TABLE IF EXISTS t_class;
DROP TABLE IF EXISTS t_task;
DROP TABLE IF EXISTS t_language;
DROP TABLE IF EXISTS t_user;
DROP TABLE IF EXISTS t_question;
DROP TABLE IF EXISTS m_role;

# テーブル作成
CREATE TABLE m_role(id CHAR(3), name VARCHAR(40), PRIMARY KEY(id)) CHARACTER SET 'utf8';
CREATE TABLE t_question(id BIGINT AUTO_INCREMENT, title VARCHAR(100), description VARCHAR(1000), input_num TINYINT DEFAULT 0 NOT NULL, PRIMARY KEY(id)) CHARACTER SET 'utf8';
CREATE TABLE t_user(id VARCHAR(20), password VARCHAR(10), name VARCHAR(100), role_id CHAR(3), PRIMARY KEY(id)) CHARACTER SET 'utf8';
CREATE TABLE t_language(id CHAR(3), name VARCHAR(60), PRIMARY KEY(id));
CREATE TABLE t_task(id BIGINT AUTO_INCREMENT, language_id CHAR(3), title VARCHAR(100), description VARCHAR(1000), question_id BIGINT,front_code TEXT, middle_code LONGTEXT, back_code LONGTEXT, PRIMARY KEY(id)) CHARACTER SET 'utf8';
CREATE TABLE t_class(id BIGINT AUTO_INCREMENT, name VARCHAR(200), PRIMARY KEY(id)) CHARACTER SET 'utf8';
CREATE TABLE t_user_class(id BIGINT AUTO_INCREMENT, user_id VARCHAR(20), class_id BIGINT, PRIMARY KEY(id)) CHARACTER SET 'utf8';
CREATE TABLE t_course(id BIGINT AUTO_INCREMENT, name VARCHAR(200), PRIMARY KEY(id)) CHARACTER SET 'utf8';
CREATE TABLE t_user_course(id BIGINT AUTO_INCREMENT, user_id VARCHAR(20), course_id BIGINT, PRIMARY KEY(id)) CHARACTER SET 'utf8';
CREATE TABLE t_class_course(id BIGINT AUTO_INCREMENT, class_id BIGINT, course_id BIGINT, PRIMARY KEY(id)) CHARACTER SET 'utf8';
CREATE TABLE t_message(id BIGINT AUTO_INCREMENT, message VARCHAR(1000), student_id VARCHAR(20), course_id BIGINT, task_id BIGINT, read_flg TINYINT(1), PRIMARY KEY(id)) CHARACTER SET 'utf8';
CREATE TABLE t_user_task_code(id BIGINT AUTO_INCREMENT, user_id VARCHAR(20), course_id BIGINT, task_id BIGINT, status TINYINT, code LONGTEXT, PRIMARY KEY(id)) CHARACTER SET 'utf8';
CREATE TABLE t_task_question(id BIGINT AUTO_INCREMENT, task_id BIGINT, question_id BIGINT, PRIMARY KEY(id)) CHARACTER SET 'utf8';
CREATE TABLE t_task_course(id BIGINT AUTO_INCREMENT, task_id BIGINT, course_id BIGINT, number BIGINT, PRIMARY KEY(id)) CHARACTER SET 'utf8';

# テストデータ作成
INSERT INTO m_role(id, name) VALUES('001', '管理者');
INSERT INTO m_role(id, name) VALUES('002', '先生');
INSERT INTO m_role(id, name) VALUES('003', '学生');
INSERT INTO t_language(id, name) VALUES('001', 'Ｃ／Ｃ＋＋');
INSERT INTO t_language(id, name) VALUES('002', 'Ｊａｖａ');
INSERT INTO t_language(id, name) VALUES('003', 'Ｐｙｔｈｏｎ');
INSERT INTO t_question(id, title, description, input_num) VALUES(1, '足し算問題', '与えられた２つの数値を足し合わせた結果を返す', 2);
INSERT INTO t_question(id, title, description, input_num) VALUES(2, '引き算算問題', '与えられた２つの数値を引いた結果を返す', 2);
INSERT INTO t_question(id, title, description, input_num) VALUES(3, '掛け算問題', '与えられた２つの数値を掛け合わせた結果を返す', 2);
INSERT INTO t_question(id, title, description, input_num) VALUES(4, '割り算問題', '与えられた２つの数値を割った結果を返す', 2);
INSERT INTO t_task(id, language_id, title, description, question_id, additional_code, sample_code, check_code) VALUES(1, '002', '足し算課題', '第１引数と第２引数の値を合計し、戻り値として返す', 1, 'import java.util.*;', 'public CodeClass {    public int taskMethod(int param1, int param2) {        return 20;    }}', 'public CheckCodeClass {    public static void main(String[] args) {        CodeClass codeClass = new CodeClass();        int actual1 = codeClass.taskMethod(10, 10);        int expected1 = 20;        if(actual != expected) {            exit(-1);        }        int actual2 = codeClass.taskMethod(10, -15);        int expected2 = -5;        if(actual != expected) {            exit(-1);        }        exit(0);    }}');
INSERT INTO t_user(id, password, name, role_id) VALUES('testadmin1', 'password', 'テスト用管理者１', '001');
INSERT INTO t_user(id, password, name, role_id) VALUES('testteacher1', 'password', 'テスト用先生１', '002');
INSERT INTO t_user(id, password, name, role_id) VALUES('teststudent1', 'password', 'テスト用学生１', '003');
INSERT INTO t_user(id, password, name, role_id) VALUES('teststudent2', 'password', 'テスト用学生２', '003');
INSERT INTO t_class(id, name) VALUES(1, 'クラスＡ');
INSERT INTO t_class(id, name) VALUES(2, 'クラスＢ');
INSERT INTO t_user_class(id, user_id, class_id) VALUES(1, 'teststudent1', 1);
INSERT INTO t_user_class(id, user_id, class_id) VALUES(2, 'teststudent1', 2);
INSERT INTO t_course(id, name) VALUES(1, 'テストコース');
INSERT INTO t_user_course(id, user_id, course_id) VALUES(1, 'teststudent1', 1);
INSERT INTO t_class_course(id, class_id, course_id) VALUES(1, 2, 1);